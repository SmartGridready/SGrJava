/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn more about Gradle by exploring our samples at https://docs.gradle.org/7.3.3/samples
 */

 plugins {
    id 'java'
    id 'maven-publish'
}


repositories {
    mavenLocal()
    mavenCentral()
    gradlePluginPortal()
}


apply plugin: 'java'
apply plugin: 'maven-publish'

def integrationTest = sourceSets.create('integrationTest')

configurations[integrationTest.implementationConfigurationName].extendsFrom(configurations.testImplementation)
configurations[integrationTest.runtimeOnlyConfigurationName].extendsFrom(configurations.testRuntimeOnly)

sourceSets {
        main.java.srcDirs = ['src/main/java']
        main.resources.srcDirs = ['src/main/resources']
        test.java.srcDirs = ['src/test/java']
        test.resources.srcDirs = ['src/test/resources']

        integrationTest.java.srcDirs = ['src/test/java']
        integrationTest.resources.srcDirs = ['src/test/resources']
}

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

test {
    useJUnitPlatform() // needed to run JUnit 5 test with gradle
}

configurations {
    extraLibs.extendsFrom implementation
}

dependencies {
    implementation project(':InterfaceFactory:emfEI4Modbus')

    implementation group: 'ch.smartgridready', name: 'sgr-driver-api', version: '1.1.0'
    implementation group: 'ch.smartgridready', name: 'easymodbus', version: '1.1.0'
    implementation group: 'org.apache.httpcomponents.client5', name: 'httpclient5', version: '5.1.3'
    implementation group: 'org.apache.httpcomponents.client5', name: 'httpclient5-fluent', version: '5.1.3'
    implementation group: 'com.hivemq', name: 'hivemq-mqtt-client', version: '1.3.3'

    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.16.0'
    implementation group: 'io.burt', name: 'jmespath-core', version: '0.5.1'
    implementation group: 'io.burt', name: 'jmespath-jackson', version: '0.5.1'
    implementation group: 'commons-io', name: 'commons-io', version: '2.15.1'
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.14.0'
    implementation group: 'io.vavr', name: 'vavr', version: '0.10.4'

    implementation group: 'org.eclipse.emf', name: 'org.eclipse.emf.ecore', version: '2.24.0'
    implementation group: 'org.eclipse.emf', name: 'org.eclipse.emf.ecore.xmi', version: '2.16.0'
    implementation group: 'org.eclipse.emf', name: 'org.eclipse.emf.common', version: '2.24.0'
    implementation group: 'org.eclipse.emf', name: 'org.eclipse.emf.edit', version: '2.17.0'

    implementation group: 'io.reactivex.rxjava3', name: 'rxjava', version: '3.1.5'

    implementation group: 'org.slf4j', name: 'slf4j-api', version: '2.0.10'

    testImplementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.19.0'
    testImplementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.19.0'
    testImplementation group: 'org.apache.logging.log4j', name: 'log4j-slf4j2-impl', version: '2.19.0'

    testImplementation group: 'org.yaml', name: 'snakeyaml', version: '1.27'
    testImplementation group: 'org.mockito', name: 'mockito-core', version: '5.12.0'
    testImplementation group: 'org.mockito', name: 'mockito-junit-jupiter', version: '5.12.0'
    testImplementation group: 'org.mockito', name: 'mockito-inline', version: '5.2.0'
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-params', version: '5.10.2'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.10.2'

    testImplementation group: 'org.awaitility', name: 'awaitility', version: '4.2.0'
}

test {
    useJUnitPlatform()
    filter {
        excludeTestsMatching("communicator.modbus.integrationtest.*")
    }
    // this workaround is required to run some tests under JDKs > 17.
    // otherwise EqualsBuilder.reflectionEquals(...) may fail due to inaccessible fields, e.g. serialVersionUID.
    doFirst {
        jvmArgs("--add-opens", "java.base/java.util=ALL-UNNAMED")
    }
}

jar {

    from sourceSets.main.allSource

    duplicatesStrategy=DuplicatesStrategy.EXCLUDE
    exclude('**/ECLIPSE_.SF', '**/ECLIPSE_.DSA', '**/ECLIPSE_.RSA')
    exclude('log4j2.xml')

    // Remove this after project cleanup
    exclude('*.lnk', '.project')

    from {
        // configurations.extraLibs.collect { it.isDirectory() ? it : zipTree(it) }
        configurations.extraLibs.collect {
            if(it.name.matches("emfEI4Modbus(.*).jar")) {
                zipTree(it)
            }
        }
    }
}

tasks."compileJava".dependsOn ':InterfaceFactory:emfEI4Modbus:publishToMavenLocal'

publishing {

    repositories {
        maven {
            name = "Nexus"
            url = uri("https://nexus.library.smartgridready.ch/repository/maven-releases/")
            credentials {
                username = findProperty("nexus.username")
                password = findProperty("nexus.password")
            }
        }
    }

    publications {
        mavenJava(MavenPublication) {
            groupId = 'ch.smartgridready'
            artifactId = 'commhandler4modbus'
            version = rootProject.version

            from components.java
        }
    }
}


def integrationTestTask = tasks.register('integrationTest', Test) {
    description = 'Runs integration tests.'
    group = 'verification'
    useJUnitPlatform()

    testClassesDirs = integrationTest.output.classesDirs
    classpath = configurations[integrationTest.runtimeClasspathConfigurationName] + integrationTest.output

    setTestNameIncludePatterns(['communicator.modbus.integrationtest.*'])

    shouldRunAfter(tasks.named('build'))
}

